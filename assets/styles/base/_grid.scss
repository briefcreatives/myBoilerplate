$nColumns: 10;
$gutter: 0.05;

@function grid-width($size, $has-gutter:false) {
  
    @if $has-gutter {
        @return calc( (1 - #{$gutter}) * (100% / #{$nColumns}) * #{$size} );  
    }
    @else {
        @return calc( (100% / #{$nColumns}) * #{$size} );
    }
  
}
@mixin grid($size, $has-gutter:false){
    width: grid-width($size, $has-gutter);
    margin: 0 ($gutter/2)*100%;
}
.container {
    
    &, &-xs, &-sm, &-md, &-lg, &-xl {
        @include container;
        width: 75%;
    }
    &-xs {
        @media (max-width: $xs-breakpoint) {
            width: 100%;
        }
    }
    &-sm {
        @media (max-width: $sm-breakpoint) {
            width: 100%;
        }
    }
    &-md {
        @media (max-width: $md-breakpoint) {
            width: 100%;
        }
    }
    &-lg {
        @media (min-width: $lg-breakpoint) {
            width: 100%;
        }
    }
    &-xl {
        @media (min-width: $xl-breakpoint) {
            width: 100%;
        }
    }
}

@for $colWidth from 1 to 12 {
    .col-#{$colWidth} {
        &, &-xs, &-sm, &-md, &-lg, &-xl {
            @include grid($colWidth, true);

        }

        &-xs {
            @media (max-width: $xs-breakpoint) {
                @include grid($nColumns);
            }
        }
        &-sm {
            @media (max-width: $sm-breakpoint) {
                @include grid($nColumns);
            }
        }
        &-md {
            @media (max-width: $md-breakpoint) {
                @include grid($nColumns);
            }
        }
        &-lg {
            @media (min-width: $lg-breakpoint) {
                @include grid($nColumns);
            }
        }
        &-xl {
            @media (min-width: $xl-breakpoint) {
                @include grid($nColumns);
            }
        }
    }
}
